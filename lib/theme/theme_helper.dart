import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    _appTheme = _newTheme;
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA700,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: appTheme.gray200,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(18.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      floatingActionButtonTheme: FloatingActionButtonThemeData(
        backgroundColor: appTheme.green20001,
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: colorScheme.primary.withOpacity(1),
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.gray50003,
          fontSize: 16.fSize,
          fontFamily: 'Rounded Mplus 1c',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: colorScheme.primary.withOpacity(1),
          fontSize: 14.fSize,
          fontFamily: 'Arial',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: colorScheme.primary.withOpacity(1),
          fontSize: 8.fSize,
          fontFamily: 'Arial',
          fontWeight: FontWeight.w400,
        ),
        displayLarge: TextStyle(
          color: Color(0XFF88AB8E),
          fontSize: 64.fSize,
          fontFamily: 'Rounded Mplus 1c Bold',
          fontWeight: FontWeight.w700,
        ),
        displayMedium: TextStyle(
          fontSize: 48.fSize,
          fontFamily: 'Arial Rounded MT Bold',
          fontWeight: FontWeight.w400,
        ),
        headlineSmall: TextStyle(
          color: appTheme.gray800,
          fontSize: 24.fSize,
          fontFamily: 'Arial',
          fontWeight: FontWeight.w700,
        ),
        labelLarge: TextStyle(
          color: colorScheme.primary.withOpacity(1),
          fontSize: 12.fSize,
          fontFamily: 'Rounded Mplus 1c',
          fontWeight: FontWeight.w500,
        ),
        labelMedium: TextStyle(
          color: appTheme.gray70001,
          fontSize: 10.fSize,
          fontFamily: 'Arial',
          fontWeight: FontWeight.w700,
        ),
        titleLarge: TextStyle(
          color: appTheme.gray70002,
          fontSize: 20.fSize,
          fontFamily: 'Rounded Mplus 1c Bold',
          fontWeight: FontWeight.w700,
        ),
        titleSmall: TextStyle(
          color: appTheme.gray70001,
          fontSize: 14.fSize,
          fontFamily: 'Arial',
          fontWeight: FontWeight.w700,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0X26000000),
    secondaryContainer: Color(0XFF707070),

    // On colors(text colors)
    onPrimary: Color(0XFF1C1B1F),
    onPrimaryContainer: Color(0XFFAAAAAA),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // BlueGray
  Color get blueGray100 => Color(0XFFD9D9D9);
  Color get blueGray10001 => Color(0XFFCDD3CB);

  // Gray
  Color get gray100 => Color(0XFFF3F3F3);
  Color get gray200 => Color(0XFFECECEC);
  Color get gray20001 => Color(0XFFEBEBEB);
  Color get gray20002 => Color(0XFFEFEFEF);
  Color get gray300 => Color(0XFFD8E1D8);
  Color get gray30001 => Color(0XFFE2E2E2);
  Color get gray30002 => Color(0XFFDBE4DB);
  Color get gray400 => Color(0XFFB5BBB4);
  Color get gray50 => Color(0XFFF9F9F9);
  Color get gray500 => Color(0XFF9AB79F);
  Color get gray50001 => Color(0XFF8EAF94);
  Color get gray50002 => Color(0XFF88AB8E);
  Color get gray50003 => Color(0XFF9F9F9F);
  Color get gray600 => Color(0XFF7A7A7A);
  Color get gray60001 => Color(0XFF828282);
  Color get gray700 => Color(0XFF5E5E5E);
  Color get gray70001 => Color(0XFF676767);
  Color get gray70002 => Color(0XFF5C5C5C);
  Color get gray800 => Color(0XFF444444);
  Color get gray80001 => Color(0XFF4A4A4A);
  Color get gray80002 => Color(0XFF424242);
  Color get gray80003 => Color(0XFF304D30);

  // Green
  Color get green200 => Color(0XFFA2BCA6);
  Color get green20001 => Color(0XFFAFC8AD);
  Color get green50 => Color(0XFFE5F0E4);

  // LightGreen
  Color get lightGreen300 => Color(0XFFA1C38C);

  // Red
  Color get redA200 => Color(0XFFFF4E4E);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);

  // Yellow
  Color get yellow700 => Color(0XFFE9C721);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
